/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

* {
  box-sizing: border-box;
  text-shadow: 0 1px 2px #000;
  -webkit-touch-callout: none;
  /* iOS Safari */
  -webkit-user-select: none;
  /* Safari */
  -khtml-user-select: none;
  /* Konqueror HTML */
  -moz-user-select: none;
  /* Firefox */
  -ms-user-select: none;
  /* Internet Explorer/Edge */
  user-select: none;
  /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}

html,
body {
  background-color: #111;
  margin: 0;
  min-height: 100%;
  color: #fff;
  font-family: 'Open Sans', sans-serif;
  font-weight: 400;
  font-size: 16px;
  overflow: hidden;
}

html {
  background: url("https://xivapi.com/launcher/bg.jpg");
  background-size: cover;
  position: relative;
}

header {
  -webkit-app-region: drag;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  height: 50px;
  overflow: hidden;
  background-color: #222;
  box-shadow: 0 0 30px 5px rgba(0, 0, 0, 0.8);
  border-bottom: solid 1px #000;
  z-index: 10;
  display: flex;
}

header > div {
  flex: 0 1 50%;
}

header > div:first-of-type {
  font-size: 14px;
  letter-spacing: 2px;
  padding: 20px 0 0 20px;
  opacity: 0.4;
  font-weight: 600;
}

header > div:last-of-type {
  text-align: right;
}

header > div:last-of-type > button {
  position: relative;
  z-index: 60;
  background-color: transparent;
  border: none;
  height: 50px;
  width: 50px;
  padding: 10px 0 0 0;
  line-height: 40px;
  transition: .2s;
  opacity: 0.6;
  cursor: pointer;
}

header > div:last-of-type > button:hover {
  opacity: 1;
  background-color: #000;
}

header > div:last-of-type > button img {
  height: 18px;
}

h1 {
  font-size: 32px;
  font-weight: 300;
  margin: 30px 0 0 30px;
}

h3 {
  margin: 0 0 20px 0;
  font-size: 20px;
  font-weight: 400;
}

a,
button,
input {
  outline: none;
  -webkit-app-region: no-drag;
}

form label {
  display: block;
  margin-bottom: 5px;
}

form input[type="text"],
form input[type="password"],
form select {
  outline: none;
  background-color: #fff;
  padding: 12px;
  border: none;
  border-radius: 3px;
  width: 100%;
  font-size: 16px;
  box-shadow: 0 1px 3px #000;
  text-shadow: none;
}

form button {
  outline: none;
  background-color: #555;
  color: #fff;
  text-align: center;
  padding: 10px 15px;
  border: none;
  border-radius: 3px;
  font-size: 16px;
  text-shadow: 0 1px 2px #000;
  cursor: pointer;
  box-shadow: 0 1px 3px #000;
  transition: .2s;
  font-weight: 400;
}

form button:hover {
  background-color: #3c3c3c;
}

form select {
  outline: none;
  background-color: #fff;
  padding: 12px;
  border: none;
  border-radius: 3px;
  width: 100%;
  font-size: 16px;
  box-shadow: 0 1px 3px #000;
  text-shadow: none;
}

button.btn {
  background-color: #111;
  border: none;
  padding: 10px 15px;
  box-shadow: 0 1px 3px #000;
  border-radius: 5px;
  font-size: 16px;
  color: #fff;
  transition: .2s;
  cursor: pointer;
}

button.btn:hover {
  background-color: #333;
}

.fr {
  float: right;
}

.expansion {
  position: absolute;
  left: 30px;
  bottom: 30px;
}

.add-character-form {
  position: absolute;
  top: 60px;
  right: 410px;
  width: 500px;
  padding: 20px;
  background-color: #333;
  border-radius: 3px;
  box-shadow: 0 0 3px #000;
  z-index: 50;
  display: none;
}

.add-character-form.open {
  display: block;
}

.add-character-form label {
  display: block;
  color: #888;
  font-size: 14px;
  text-transform: uppercase;
  font-weight: 400;
  margin-top: 15px;
}

.add-character-form p {
  font-size: 13px;
  color: #aaa;
  margin-bottom: 20px;
  line-height: 20px;
}

.add-character-form .ac-close {
  float: right;
  padding: 5px 10px;
  border-radius: 50px;
}

.add-character-form .ac-close img {
  vertical-align: middle;
}

.add-character-form .ac-row-flex2 {
  display: flex;
}

.add-character-form .ac-row-flex2 > div {
  flex: 0 1 50%;
}

.add-character-form .ac-row-flex2 > div:first-of-type {
  margin-right: 5px;
}

.add-character-form .ac-row-flex2 > div:last-of-type {
  margin-left: 5px;
}

.add-character-form .ac-row-small input {
  width: 30%;
}

.add-character-form h3 {
  margin-bottom: 15px;
}

.add-character-form div {
  margin-bottom: 10px;
}

.character-list {
  position: absolute;
  top: 50px;
  right: 0;
  bottom: 0;
  width: 400px;
  background-color: #222;
}

.character-list .cl-add {
  border-bottom: solid 1px #000;
  box-shadow: 0 1px 0 #333;
}

.character-list .cl-add > button {
  height: 60px;
  line-height: 60px;
  padding: 0 20px;
  background: none;
  border: none;
  width: 100%;
  color: #fff;
  text-align: left;
  font-size: 20px;
  cursor: pointer;
  opacity: 0.2;
  transition: .2s;
}

.character-list .cl-add > button:hover {
  background-color: #111;
  opacity: 1;
}

.character-list .cl-add > button img {
  vertical-align: middle;
  margin: 0 10px 4px;
}

.character-list .cl-row {
  border-bottom: solid 1px #000;
  box-shadow: 0 1px 0 #333;
}

.character-list .cl-row > button {
  display: flex;
  padding: 20px;
  background: none;
  border: none;
  width: 100%;
  color: #fff;
  text-align: left;
  font-size: 20px;
  cursor: pointer;
  transition: .2s;
}

.character-list .cl-row > button:hover {
  background-color: #111;
  opacity: 1;
}

.character-list .cl-row > button * {
  pointer-events: none;
}

.character-list .cl-row span {
  font-size: 11px;
  text-transform: uppercase;
  color: #888;
}

.character-list .cl-row img {
  border-radius: 5px;
  box-shadow: 0 1px 5px #000;
  height: 64px;
  width: 64px;
  margin-right: 15px;
}

.character-list .cl-row h4 {
  color: #ffe072;
  font-size: 20px;
  font-weight: 300;
}

.character-list .cl-row small {
  color: #ffe072;
  display: block;
  text-transform: uppercase;
  font-size: 12px;
  margin-top: 1px;
  opacity: 0.5;
}

.character-list .cl-notes {
  font-size: 13px;
  color: #888;
  padding: 20px;
  line-height: 18px;
}

.character-list .cl-notes strong {
  color: #e33b32;
  font-weight: 600;
}

.character-list .cl-notes p {
  margin-bottom: 10px;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/