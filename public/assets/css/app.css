/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

* {
  box-sizing: border-box;
  text-shadow: 0 1px 2px #000;
  -webkit-touch-callout: none;
  /* iOS Safari */
  -webkit-user-select: none;
  /* Safari */
  -khtml-user-select: none;
  /* Konqueror HTML */
  -moz-user-select: none;
  /* Firefox */
  -ms-user-select: none;
  /* Internet Explorer/Edge */
  user-select: none;
  /* Non-prefixed version, currently
                                  supported by Chrome and Opera */ }

::-webkit-scrollbar {
  width: 8px; }

::-webkit-scrollbar-button {
  display: none; }

::-webkit-scrollbar-track {
  background-color: rgba(0, 0, 0, 0.5); }

::-webkit-scrollbar-track-piece {
  background-color: rgba(0, 0, 0, 0); }

::-webkit-scrollbar-thumb {
  height: 50px;
  background-color: #666;
  border-radius: 3px; }

::-webkit-resizer {
  background-color: rgba(0, 0, 0, 0); }

html, body {
  background-color: #111;
  margin: 0;
  min-height: 100%;
  color: #fff;
  font-family: 'Open Sans', sans-serif;
  font-weight: 400;
  /* This sets the base UI scaling. Everything else should be in ems. */
  font-size: 16px;
  overflow: hidden; }

main {
  position: relative;
  background-color: #000;
  background-size: cover; }

body, main {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%; }

header {
  -webkit-app-region: drag;
  height: 3em;
  line-height: 3em;
  padding: 0 0 0 1.5em;
  overflow: hidden;
  background-color: #222;
  box-shadow: 0 0 30px 5px rgba(0, 0, 0, 0.8);
  border-bottom: solid 1px #000; }
  header > div {
    flex: 0 1 50%; }
    header > div:first-of-type {
      font-size: .8em;
      letter-spacing: .01em;
      opacity: 0.4;
      font-weight: 600;
      float: left; }
    header > div:last-of-type {
      text-align: right;
      float: right; }
      header > div:last-of-type > button {
        position: relative;
        background-color: transparent;
        border: none;
        width: 4em;
        padding: 1em;
        transition: .2s;
        opacity: 0.6;
        cursor: pointer; }
        header > div:last-of-type > button:hover {
          opacity: 1;
          background-color: #000; }
        header > div:last-of-type > button img {
          height: 18px; }

a, button, input {
  outline: none;
  -webkit-app-region: no-drag; }

form label {
  display: block;
  margin-bottom: 5px; }

form input[type="text"],
form input[type="password"],
form select {
  outline: none;
  background-color: #fff;
  padding: 10px 12px;
  border: none;
  border-radius: 3px;
  width: 100%;
  font-size: 16px;
  box-shadow: 0 1px 3px #000;
  text-shadow: none; }

form button {
  outline: none;
  background-color: #555;
  color: #fff;
  text-align: center;
  padding: 10px 15px;
  border: none;
  border-radius: 3px;
  font-size: 16px;
  text-shadow: 0 1px 2px #000;
  cursor: pointer;
  box-shadow: 0 1px 3px #000;
  transition: .2s;
  font-weight: 400; }
  form button:hover {
    background-color: #3c3c3c; }

button.btn {
  background-color: #111;
  border: none;
  padding: 10px 15px;
  box-shadow: 0 1px 3px #000;
  border-radius: 5px;
  font-size: 16px;
  color: #fff;
  transition: .2s;
  cursor: pointer; }
  button.btn:hover {
    background-color: #333; }

nav {
  float: left;
  width: 65%;
  padding: 1em 2em;
  background: -moz-linear-gradient(left, #111111 0%, #111111 5%, rgba(17, 17, 17, 0.7) 60%, rgba(17, 17, 17, 0) 100%);
  background: -webkit-linear-gradient(left, #111111 0%, #111111 5%, rgba(17, 17, 17, 0.7) 60%, rgba(17, 17, 17, 0) 100%);
  background: linear-gradient(to right, #111111 0%, #111111 5%, rgba(17, 17, 17, 0.7) 60%, rgba(17, 17, 17, 0) 100%); }
  nav > button {
    color: #fff;
    padding: .5em 1em;
    font-size: 1.25em;
    background-color: transparent;
    border: solid 1px rgba(80, 80, 80, 0.8);
    box-shadow: 0 0 5px rgba(150, 150, 150, 0.3);
    border-radius: 6px;
    cursor: pointer;
    transition: 100ms;
    margin-right: 20px; }
    nav > button:hover {
      border: solid 1px #4498ff;
      background-color: rgba(20, 20, 20, 0.2); }
    nav > button > svg {
      height: 32px;
      display: inline-block;
      fill: #fff;
      vertical-align: middle;
      margin: -4px 6px 0 0; }

.fr {
  float: right; }

.notice-fade {
  position: absolute;
  top: 48px;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.75);
  display: none;
  z-index: 500; }
  .notice-fade.open {
    display: block; }

.notice {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: #111;
  box-shadow: 0 2px 20px #000;
  z-index: 1000;
  border: solid 3px #000;
  padding: 50px;
  width: 500px;
  border-radius: 3px;
  transition: 500ms;
  display: none; }
  .notice h1 {
    font-size: 32px;
    margin-bottom: 20px; }
  .notice p {
    line-height: 26px;
    font-size: 16px;
    margin-bottom: 15px; }
    .notice p:last-of-type {
      margin-bottom: 0; }
  .notice.open {
    display: block;
    animation-duration: 250ms;
    animation-name: alert; }

@keyframes alert {
  from {
    transform: translate(-50%, -50%) scale(0.5); }
  to {
    transform: translate(-50%, -50%) scale(1); } }

.settings-form {
  position: absolute;
  top: 60px;
  left: 10px;
  width: 500px;
  padding: 20px;
  background-color: #333;
  border-radius: 3px;
  box-shadow: 0 0 3px #000;
  z-index: 50;
  display: none; }
  .settings-form.open {
    display: block; }
  .settings-form label {
    display: block;
    color: #888;
    font-size: 14px;
    text-transform: uppercase;
    font-weight: 400;
    margin-top: 15px; }
  .settings-form p {
    font-size: 13px;
    color: #aaa;
    margin-bottom: 20px;
    line-height: 20px; }
  .settings-form h1 {
    font-size: 32px;
    font-weight: 300;
    margin-bottom: 15px; }
  .settings-form h2 {
    font-size: 20px;
    margin-bottom: 10px; }
  .settings-form strong {
    font-weight: 600; }
  .settings-form .ac-close {
    float: right;
    padding: 5px 10px;
    border-radius: 50px; }
    .settings-form .ac-close img {
      vertical-align: middle; }
  .settings-form .ac-row-flex2 {
    display: flex; }
    .settings-form .ac-row-flex2 > div {
      flex: 0 1 50%; }
      .settings-form .ac-row-flex2 > div:first-of-type {
        margin-right: 5px; }
        .settings-form .ac-row-flex2 > div:first-of-type > input {
          width: 160%; }
      .settings-form .ac-row-flex2 > div:last-of-type {
        display: flex;
        justify-content: flex-end;
        margin-left: 5px; }
  .settings-form .ac-row-small input {
    width: 30%; }

.lodestone-news {
  width: 65%;
  overflow-y: auto;
  position: fixed;
  left: 0;
  top: 8.15em;
  bottom: 0;
  display: none;
  padding-left: 2em;
  direction: rtl;
  background: -moz-linear-gradient(left, #111111 0%, #111111 5%, rgba(17, 17, 17, 0.7) 60%, rgba(17, 17, 17, 0) 100%);
  background: -webkit-linear-gradient(left, #111111 0%, #111111 5%, rgba(17, 17, 17, 0.7) 60%, rgba(17, 17, 17, 0) 100%);
  background: linear-gradient(to right, #111111 0%, #111111 5%, rgba(17, 17, 17, 0.7) 60%, rgba(17, 17, 17, 0) 100%); }
  .lodestone-news.open {
    display: block; }
  .lodestone-news > div {
    direction: ltr;
    display: flex;
    margin-bottom: 20px; }
    .lodestone-news > div > div:first-of-type {
      flex: 0 1 200px; }
    .lodestone-news > div > div:last-of-type {
      flex: 0 1 calc(100% - 200px); }
    .lodestone-news > div img {
      width: 180px;
      border-radius: 5px; }
    .lodestone-news > div h2 {
      font-size: 20px;
      font-weight: 300;
      margin-bottom: 5px; }
      .lodestone-news > div h2 a {
        color: #faff8f;
        text-decoration: none; }
        .lodestone-news > div h2 a:hover {
          text-decoration: underline; }
    .lodestone-news > div small {
      font-size: 13px;
      text-transform: uppercase;
      opacity: 0.3; }

.add-character-form {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-shadow: 0 0 250px 40px #000;
  right: 410px;
  width: 500px;
  padding: 40px;
  background-color: #333;
  border-radius: 5px;
  border: solid 1px #000;
  z-index: 50;
  display: none; }
  .add-character-form.open {
    display: block; }
  .add-character-form label {
    display: block;
    color: #888;
    font-size: 14px;
    text-transform: uppercase;
    font-weight: 400;
    margin-top: 15px; }
  .add-character-form p {
    font-size: 13px;
    color: #aaa;
    margin-bottom: 20px;
    line-height: 20px; }
  .add-character-form h1 {
    font-size: 32px;
    font-weight: 300;
    margin-bottom: 15px; }
  .add-character-form h2 {
    font-size: 20px;
    margin-bottom: 10px; }
  .add-character-form div {
    margin-bottom: 10px; }
  .add-character-form .btn-save {
    font-weight: 600;
    font-size: 20px; }
  .add-character-form .ac-close {
    float: right;
    padding: 5px 10px;
    border-radius: 50px; }
    .add-character-form .ac-close img {
      vertical-align: middle; }
  .add-character-form .ac-row-flex2 {
    display: flex; }
    .add-character-form .ac-row-flex2 > div {
      flex: 0 1 50%; }
      .add-character-form .ac-row-flex2 > div:first-of-type {
        margin-right: 5px; }
      .add-character-form .ac-row-flex2 > div:last-of-type {
        margin-left: 5px; }
  .add-character-form .ac-row-small input {
    width: 30%; }

.character-list {
  width: 35%;
  position: fixed;
  top: 3em;
  bottom: 0;
  right: 0;
  background-color: transparent;
  background: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 10%, black 95%);
  background: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 10%, black 95%);
  background: linear-gradient(to right, rgba(0, 0, 0, 0) 10%, black 95%); }
  .character-list .cl-add {
    padding: 1em 2em;
    text-align: right; }
    .character-list .cl-add button {
      color: #fff;
      padding: 0 15px;
      height: 50px;
      line-height: 50px;
      font-size: 20px;
      background-color: transparent;
      border: solid 1px rgba(80, 80, 80, 0.8);
      box-shadow: 0 0 5px rgba(150, 150, 150, 0.3);
      border-radius: 6px;
      cursor: pointer;
      transition: 100ms; }
      .character-list .cl-add button:hover {
        border: solid 1px #faff8f;
        background-color: rgba(255, 250, 137, 0.2); }
      .character-list .cl-add button svg {
        height: 32px;
        display: inline-block;
        fill: #fff;
        vertical-align: middle;
        margin: -4px 6px 0 0; }
  .character-list .cl-list {
    text-align: right;
    padding: 0 2em 0 .5em;
    position: fixed;
    top: 8.25em;
    bottom: 0;
    right: 0;
    width: 35%;
    overflow-y: auto; }
    .character-list .cl-list > button {
      width: 100%;
      display: flex;
      margin-bottom: 1.5em;
      flex-direction: row;
      justify-content: flex-end;
      background-color: transparent;
      border: none;
      height: 5em;
      line-height: 5em;
      color: #fff;
      border-radius: 5em;
      padding: 0;
      transition: 100ms; }
      .character-list .cl-list > button > img {
        height: 5em;
        border-radius: 5em;
        box-shadow: 0 1px 6px #000;
        content: url("https://xivapi.com/launcher/faceless.png"); }
      .character-list .cl-list > button > div {
        margin: 0 1em 0 0;
        display: flex; }
        .character-list .cl-list > button > div h4 {
          font-size: 1.5em;
          font-weight: 300;
          white-space: nowrap;
          text-overflow: ellipsis;
          color: transparent;
          text-shadow: 0 0 0.8em rgba(255, 255, 255, 0.8); }
        .character-list .cl-list > button > div svg {
          fill: #fff;
          height: 1.7em;
          margin: 1.5em .5em 0 0;
          opacity: 0.2; }
      .character-list .cl-list > button:hover {
        cursor: pointer;
        background-color: rgba(67, 72, 87, 0.3); }

.character-view {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 50px;
  width: 500px;
  z-index: 500;
  display: none;
  border-radius: 8px;
  box-shadow: 0 1px 20px #000;
  border: solid 1px #000;
  background-color: rgba(25, 25, 25, 0.85); }
  .character-view.open {
    display: block; }
  .character-view > div:nth-of-type(1) {
    text-align: center; }
  .character-view > div:nth-of-type(2) {
    text-align: center; }
  .character-view > div:nth-of-type(3) {
    text-align: center; }
  .character-view .avatar {
    height: 96px;
    border-radius: 96px;
    box-shadow: 0 1px 8px #000;
    margin-bottom: 15px; }
  .character-view h1 {
    font-size: 26px;
    font-weight: 300;
    margin-bottom: 5px; }
  .character-view small {
    text-transform: uppercase;
    color: #666;
    font-size: 14px; }
  .character-view hr {
    border: none;
    height: 2px;
    background-color: #333;
    margin: 40px 20px; }
  .character-view .btn-start-game {
    background-color: #009e2a;
    color: #fff;
    height: 50px;
    line-height: 50px;
    padding: 0 20px;
    font-size: 19px;
    font-weight: 400;
    border: none;
    border-radius: 8px;
    box-shadow: 0 1px 5px #000;
    cursor: pointer;
    transition: 100ms; }
    .character-view .btn-start-game:hover {
      background-color: #008727; }
  .character-view .btn-delete-character {
    color: #e53939;
    background-color: transparent;
    border: none;
    text-transform: uppercase;
    font-weight: 500;
    font-size: 14px;
    cursor: pointer; }
    .character-view .btn-delete-character:hover {
      text-decoration: underline; }
  .character-view .otp2 {
    line-height: 50px;
    padding: 0 20px;
    margin-bottom: 15px;
    background-color: #333;
    border: solid 1px #000;
    font-size: 23px;
    font-weight: 600;
    letter-spacing: 1px;
    color: #aaa;
    width: 165px;
    text-align: center;
    border-radius: 8px; }

.character-fade {
  position: absolute;
  top: 48px;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  z-index: 495;
  background-color: rgba(0, 0, 0, 0.75);
  display: none; }
  .character-fade.open {
    display: block; }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/